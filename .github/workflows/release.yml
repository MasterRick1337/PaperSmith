name: 'publish'

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - action-testing

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libssl-dev

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - uses: jetli/trunk-action@v0.5.0
        with:
          version: 'latest'

      - name: add target
        run: |
          rustup target add wasm32-unknown-unknown

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          iconPath: 'src-tauri/icons/icon.png'
          releaseDraft: false
          prerelease: true
          args: ${{ matrix.args }}

  generate-hashes:
    permissions:
      contents: write

    if: github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install -y md5sum

      - name: Download Assets
        run: |
          mkdir -p assets
          for asset in $(curl -s "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/$GITHUB_REF_NAME/assets" | jq -r '.[].browser_download_url'); do
            wget "$asset" -P assets/
          done

      - name: Generate Individual Hash Files
        run: |
          for file in assets/*; do
            echo "$(basename "$file") $(md5sum "$file" | awk '{print $1}') > "$(basename "$file").md5"
          done

      - name: Upload Hash Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-hashes
          path: assets/*.md5
